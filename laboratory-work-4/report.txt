# ===========================================================
# Problem 1

## A. Write a class having two private variables and one-member function which will return the area of the rectangle.

#### **Solution:**

```c++
#include <iostream>

using namespace std;

class Rectangle
{
private:
  float l, b;

public:
  float getArea(float l, float b)
  {
    return l * b;
  }
};

int main()
{
  float l, b;
  Rectangle r1;

  cout << "Enter the length of the rectangle: ";
  cin >> l;

  cout << "Enter the breadth of the rectangle: ";
  cin >> b;

  cout << "Area of the rectangle is: " << r1.getArea(l, b) << " square units.";

  return 0;
}
```

# ===========================================================
# Problem 2

## A. Write a program and input two integers in main and pass them to default constructor of the class. Show the result of the additon of two numbers.

#### **Solution:**

```c++
#include <iostream>

using namespace std;

class Operation
{
public:
  int a, b;

  Operation(int a, int b)
  {
    this->a = a;
    this->b = b;
  }

  int sum()
  {
    return a + b;
  }
};

int main()
{
  int a, b;
  cout << "Enter two numbers: ";
  cin >> a;
  cin >> b;

  Operation op(a, b);
  cout << "The addition result on:" << op.sum() << endl;

  return 0;
}
```

# ===========================================================
# Problem 3

## A. Write a c++ Class called 'student' with Data members **name (char type),** **marks1, marks2 (integer type)** The program asks the user to enter name and marks. Then calc_media() calculates the media note and disp() display name and total media mark on screen in different lines.

#### **Solution:**

```c++
#include <iostream>

using namespace std;

class Student
{
public:
  char *name;
  int mark1;
  int mark2;

  Student(char *na, int ma1, int ma2)
  {
    name = na;
    mark1 = ma1;
    mark2 = ma2;
  }

  int calc_media()
  {
    return (mark1 + mark2) / 2;
  }

  void disp()
  {
    cout << "Student:" << name << " \n media:" << calc_media() << "\n";
  }
};

int main()
{
  const int MaxLength = 1024;
  char nam[MaxLength] = {};

  int m1, m2;

  cout << "Enter name: ";
  cin >> nam;

  cout << "Enter marks of two subjects: ";
  cin >> m1;
  cin >> m2;

  Student student1(nam, m1, m2);

  student1.disp();
  return 0;
}

```

# ===========================================================
# Problem 4

## A. Perform addition operation on complex data using class and object. The program should ask for real and imaginary part of two complex numbers, and display the real and imaginary parts of their sum.

#### **Solution:**

```c++
#include <bits/stdc++.h>
using namespace std;

class Complex
{
public:
  int real;
  int imaginary;

  Complex()
  {
    real = 0;
    imaginary = 0;
  }

  Complex(int r, int i)
  {
    real = r;
    imaginary = i;
  }

  Complex addComplexNumber(Complex C1, Complex C2)
  {
    Complex res;
    res.real = C1.real + C2.real;
    res.imaginary = C1.imaginary + C2.imaginary;

    return res;
  }
};

int main()
{
  Complex C1(4, 5);
  cout << "Complex number 1 : " << C1.real << " + i" << C1.imaginary << endl;

  Complex C2(8, 9);
  cout << "Complex number 2 : " << C2.real << " + i" << C2.imaginary << endl;

  Complex C3;
  C3 = C3.addComplexNumber(C1, C2);
  cout << "Sum of complex number : " << C3.real << " + i" << C3.imaginary;
  cout << endl
       << endl;

  Complex A(2, 7);
  cout << "Complex number 1 : " << A.real << " + i" << A.imaginary << endl;

  Complex B(10, 6);
  cout << "Complex number 2 : " << B.real
       << " + i" << B.imaginary << endl;

  Complex C;
  C = C.addComplexNumber(A, B);
  cout << "Sum of complex number : "
       << C.real << " + i"
       << C.imaginary;
}
```
